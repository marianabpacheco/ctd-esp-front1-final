{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maria\\\\OneDrive\\\\Desktop\\\\avalicao-front\\\\ctd-esp-front1-final\\\\src\\\\componentes\\\\personagens\\\\card-personagem.componente.jsx\",\n    _s = $RefreshSig$();\n\nimport BotaoFavorito from \"../botoes/botao-favorito.componente\";\nimport \"./card-personagem.css\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchCharactersStart, filterCharactersStart } from '../../actions';\nimport { useEffect } from \"react\";\n/**\r\n * Card para cada personagem dentro da grade de personagem.\r\n *\r\n * Você precisará adicionar as propriedades necessárias para exibir os dados dos personagens\r\n *\r\n *\r\n * @returns Elemento JSX\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CardPersonagem = _ref => {\n  _s();\n\n  let {\n    characters,\n    filterCharactersStart,\n    fetchCharactersStart\n  } = _ref;\n  useEffect(() => fetchCharactersStart(), [fetchCharactersStart]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: characters.isFetching ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: characters.characters.map(character => /*#__PURE__*/_jsxDEV(\"li\", {}, character.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n};\n\n_s(CardPersonagem, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = CardPersonagem;\n\nconst mapStateToProps = state => ({\n  characters: state.characters\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchCharactersStart,\n  filterCharactersStart\n}, dispatch);\n\nexport default connect()(CardPersonagem);\n\nvar _c;\n\n$RefreshReg$(_c, \"CardPersonagem\");","map":{"version":3,"sources":["C:/Users/maria/OneDrive/Desktop/avalicao-front/ctd-esp-front1-final/src/componentes/personagens/card-personagem.componente.jsx"],"names":["BotaoFavorito","connect","bindActionCreators","fetchCharactersStart","filterCharactersStart","useEffect","CardPersonagem","characters","isFetching","map","character","id","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,qCAA1B;AACA,OAAO,uBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,oBAAT,EAA+BC,qBAA/B,QAA4D,eAA5D;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA,MAAMC,cAAc,GAAG,QAAiE;AAAA;;AAAA,MAAhE;AAAEC,IAAAA,UAAF;AAAcH,IAAAA,qBAAd;AAAqCD,IAAAA;AAArC,GAAgE;AACtFE,EAAAA,SAAS,CAAC,MAAMF,oBAAoB,EAA3B,EAA+B,CAACA,oBAAD,CAA/B,CAAT;AACA,sBACE;AAAA,cAEII,UAAU,CAACC,UAAX,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,gBAGE;AAAA,6BACE;AAAA,kBACED,UAAU,CAACA,UAAX,CAAsBE,GAAtB,CAA0BC,SAAS,iBACjC,kBAASA,SAAS,CAACC,EAAnB;AAAA;AAAA;AAAA;AAAA,gBADF;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AALN,mBADF;AAkBD,CApBD;;GAAML,c;;KAAAA,c;;AAsBN,MAAMM,eAAe,GAAIC,KAAD,KAAY;AAClCN,EAAAA,UAAU,EAAEM,KAAK,CAACN;AADgB,CAAZ,CAAxB;;AAKA,MAAMO,kBAAkB,GAAGC,QAAQ,IAAIb,kBAAkB,CAAC;AACxDC,EAAAA,oBADwD;AAClCC,EAAAA;AADkC,CAAD,EAEtDW,QAFsD,CAAzD;;AAIA,eAAed,OAAO,GAAGK,cAAH,CAAtB","sourcesContent":["import BotaoFavorito from \"../botoes/botao-favorito.componente\";\r\nimport \"./card-personagem.css\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { fetchCharactersStart, filterCharactersStart } from '../../actions';\r\nimport { useEffect } from \"react\";\r\n\r\n/**\r\n * Card para cada personagem dentro da grade de personagem.\r\n *\r\n * Você precisará adicionar as propriedades necessárias para exibir os dados dos personagens\r\n *\r\n *\r\n * @returns Elemento JSX\r\n */\r\nconst CardPersonagem = ({ characters, filterCharactersStart, fetchCharactersStart }) => {\r\n  useEffect(() => fetchCharactersStart(), [fetchCharactersStart]);\r\n  return (\r\n    <>\r\n      {\r\n        characters.isFetching ? (\r\n          <span>Carregando...</span>\r\n        ) : (\r\n          <>\r\n            <ul>{\r\n              characters.characters.map(character => (\r\n                <li key={character.id}></li>\r\n              ))\r\n            }\r\n            </ul>\r\n          </>\r\n        )}\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  characters: state.characters,\r\n})\r\n\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n  fetchCharactersStart, filterCharactersStart,\r\n}, dispatch);\r\n\r\nexport default connect()(CardPersonagem);\r\n"]},"metadata":{},"sourceType":"module"}