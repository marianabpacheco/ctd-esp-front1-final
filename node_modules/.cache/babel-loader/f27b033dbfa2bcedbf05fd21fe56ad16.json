{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maria\\\\OneDrive\\\\Desktop\\\\avalicao-front\\\\ctd-esp-front1-final\\\\src\\\\componentes\\\\personagens\\\\card-personagem.componente.jsx\",\n    _s = $RefreshSig$();\n\nimport BotaoFavorito from \"../botoes/botao-favorito.componente\";\nimport \"./card-personagem.css\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchCharactersStart, filterCharactersStart } from '../../actions';\nimport { useEffect } from \"react\";\n/**\r\n * Card para cada personagem dentro da grade de personagem.\r\n *\r\n * Você precisará adicionar as propriedades necessárias para exibir os dados dos personagens\r\n *\r\n *\r\n * @returns Elemento JSX\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CardPersonagem = (characters, filterCharacters, fetchCharactersStart) => {\n  _s();\n\n  useEffect(() => fetchCharactersStart(), [fetchCharactersStart]);\n  console.log(characters);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: characters.isFetching ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this) : characters.characters.map(character => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-personagem\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\",\n        alt: \"Rick Sanchez\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-personagem-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: character.name\n        }, character.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(BotaoFavorito, {\n          isFavorito: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, this)]\n    }, character.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this))\n  }, void 0, false);\n};\n\n_s(CardPersonagem, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = CardPersonagem;\n\nconst mapStateToProps = state => ({\n  characters: state.characters\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchCharactersStart,\n  filterCharactersStart\n}, dispatch);\n\nexport default connect()(CardPersonagem);\n\nvar _c;\n\n$RefreshReg$(_c, \"CardPersonagem\");","map":{"version":3,"sources":["C:/Users/maria/OneDrive/Desktop/avalicao-front/ctd-esp-front1-final/src/componentes/personagens/card-personagem.componente.jsx"],"names":["BotaoFavorito","connect","bindActionCreators","fetchCharactersStart","filterCharactersStart","useEffect","CardPersonagem","characters","filterCharacters","console","log","isFetching","map","character","name","id","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,qCAA1B;AACA,OAAO,uBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,oBAAT,EAA+BC,qBAA/B,QAA4D,eAA5D;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA,MAAMC,cAAc,GAAG,CAACC,UAAD,EAAaC,gBAAb,EAA+BL,oBAA/B,KAAwD;AAAA;;AAC7EE,EAAAA,SAAS,CAAC,MAAMF,oBAAoB,EAA3B,EAA+B,CAACA,oBAAD,CAA/B,CAAT;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACA,sBACE;AAAA,cAEIA,UAAU,CAACI,UAAX,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,GAIEJ,UAAU,CAACA,UAAX,CAAsBK,GAAtB,CAA0BC,SAAS,iBACjC;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACE;AACE,QAAA,GAAG,EAAC,yDADN;AAEE,QAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACE;AAAA,oBAA0BA,SAAS,CAACC;AAApC,WAAWD,SAAS,CAACE,EAArB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,aAAD;AAAe,UAAA,UAAU,EAAE;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA,OAAsCF,SAAS,CAACE,EAAhD;AAAA;AAAA;AAAA;AAAA,YADF;AANN,mBADF;AAwBD,CA3BD;;GAAMT,c;;KAAAA,c;;AA6BJ,MAAMU,eAAe,GAAIC,KAAD,KAAY;AAClCV,EAAAA,UAAU,EAAEU,KAAK,CAACV;AADgB,CAAZ,CAAxB;;AAKA,MAAMW,kBAAkB,GAAGC,QAAQ,IAAIjB,kBAAkB,CAAC;AACxDC,EAAAA,oBADwD;AAClCC,EAAAA;AADkC,CAAD,EAEtDe,QAFsD,CAAzD;;AAIA,eAAelB,OAAO,GAAGK,cAAH,CAAtB","sourcesContent":["import BotaoFavorito from \"../botoes/botao-favorito.componente\";\r\nimport \"./card-personagem.css\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { fetchCharactersStart, filterCharactersStart } from '../../actions';\r\nimport { useEffect } from \"react\";\r\n\r\n/**\r\n * Card para cada personagem dentro da grade de personagem.\r\n *\r\n * Você precisará adicionar as propriedades necessárias para exibir os dados dos personagens\r\n *\r\n *\r\n * @returns Elemento JSX\r\n */\r\nconst CardPersonagem = (characters, filterCharacters, fetchCharactersStart) => {\r\n  useEffect(() => fetchCharactersStart(), [fetchCharactersStart]);\r\n  console.log(characters);\r\n  return (\r\n    <>\r\n      {\r\n        characters.isFetching ? (\r\n          <span>Carregando...</span>\r\n        ) : (\r\n          \r\n          characters.characters.map(character => (\r\n            <div className=\"card-personagem\" key={character.id}>\r\n              <img\r\n                src=\"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\r\n                alt=\"Rick Sanchez\"\r\n              />\r\n              <div className=\"card-personagem-body\">\r\n                <span key={character.id}>{character.name}</span>\r\n                <BotaoFavorito isFavorito={false} />\r\n              </div>\r\n\r\n            </div>\r\n          )))\r\n        }\r\n          \r\n    </>\r\n  );\r\n}\r\n\r\n  const mapStateToProps = (state) => ({\r\n    characters: state.characters,\r\n  })\r\n\r\n\r\n  const mapDispatchToProps = dispatch => bindActionCreators({\r\n    fetchCharactersStart, filterCharactersStart,\r\n  }, dispatch);\r\n\r\n  export default connect()(CardPersonagem);\r\n"]},"metadata":{},"sourceType":"module"}