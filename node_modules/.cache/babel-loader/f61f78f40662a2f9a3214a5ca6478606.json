{"ast":null,"code":"export function fetchCharactersStart() {\n  return {\n    type: 'FETCH_CHARACTERS_START'\n  };\n}\nexport function filterCharactersStart(searchText) {\n  return {\n    type: 'FILTER_CHARACTERS_START',\n    payload: searchText\n  };\n}\nexport function fetchCharactersSuccess(characters) {\n  return {\n    type: 'FETCH_CHARACTERS_SUCCESS',\n    payload: characters\n  };\n}\nexport function fetchCharactersError(characters) {\n  return {\n    type: 'FETCH_CHARACTERS_ERROR',\n    payload: characters\n  };\n}\nexport function nextPageCharacters(page) {\n  return {\n    type: \"NEXT_PAGE_CHARACTERS\",\n    payload: page\n  };\n}\nexport function previousPageCharacters(page) {\n  return {\n    type: \"PREVIOUS_PAGE_CHARACTERS\",\n    payload: page\n  };\n}","map":{"version":3,"sources":["C:/Users/maria/OneDrive/Desktop/avalicao-front/ctd-esp-front1-final/src/actions/index.tsx"],"names":["fetchCharactersStart","type","filterCharactersStart","searchText","payload","fetchCharactersSuccess","characters","fetchCharactersError","nextPageCharacters","page","previousPageCharacters"],"mappings":"AAMA,OAAO,SAASA,oBAAT,GAAgC;AACrC,SAAO;AACLC,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD;AAED,OAAO,SAASC,qBAAT,CAA+BC,UAA/B,EAAkD;AACrD,SAAO;AACLF,IAAAA,IAAI,EAAE,yBADD;AAELG,IAAAA,OAAO,EAAED;AAFJ,GAAP;AAID;AAED,OAAO,SAASE,sBAAT,CAAgCC,UAAhC,EAAwD;AAC7D,SAAO;AACLL,IAAAA,IAAI,EAAE,0BADD;AAELG,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID;AAED,OAAO,SAASC,oBAAT,CAA8BD,UAA9B,EAAsD;AAC3D,SAAO;AACLL,IAAAA,IAAI,EAAE,wBADD;AAELG,IAAAA,OAAO,EAACE;AAFH,GAAP;AAID;AAGF,OAAO,SAASE,kBAAT,CAA4BC,IAA5B,EAA0C;AAC9C,SAAO;AACLR,IAAAA,IAAI,EAAE,sBADD;AAELG,IAAAA,OAAO,EAAEK;AAFJ,GAAP;AAID;AACD,OAAO,SAASC,sBAAT,CAAgCD,IAAhC,EAA8C;AACnD,SAAO;AACLR,IAAAA,IAAI,EAAE,0BADD;AAELG,IAAAA,OAAO,EAAEK;AAFJ,GAAP;AAID","sourcesContent":["type Character = {\r\n  id:number,\r\n  name:string,\r\n  image:string;\r\n}\r\n\r\nexport function fetchCharactersStart() {\r\n  return {\r\n    type: 'FETCH_CHARACTERS_START',\r\n  };\r\n}\r\n\r\nexport function filterCharactersStart(searchText:string) {\r\n    return {\r\n      type: 'FILTER_CHARACTERS_START',\r\n      payload: searchText,\r\n    };\r\n  }\r\n\r\n  export function fetchCharactersSuccess(characters:Character[]) {\r\n    return {\r\n      type: 'FETCH_CHARACTERS_SUCCESS',\r\n      payload: characters,\r\n    };\r\n  }\r\n\r\n  export function fetchCharactersError(characters:Character[]) {\r\n    return {\r\n      type: 'FETCH_CHARACTERS_ERROR',\r\n      payload:characters,\r\n    };\r\n  }\r\n\r\n\r\n export function nextPageCharacters(page: number) {\r\n    return {\r\n      type: \"NEXT_PAGE_CHARACTERS\",\r\n      payload: page,\r\n    };\r\n  }\r\n  export function previousPageCharacters(page: number) {\r\n    return {\r\n      type: \"PREVIOUS_PAGE_CHARACTERS\",\r\n      payload: page,\r\n    };\r\n  }"]},"metadata":{},"sourceType":"module"}